// Generated by CoffeeScript 1.7.1
(function() {
  define(['knockout'], function(ko) {
    var result;
    result = function(id) {
      var projectId, viewModel;
      projectId = id;
      return viewModel = {
        cache: null,
        editable: {
          Id: ko.observable(0),
          Name: ko.observable(''),
          ProjectId: ko.observable(projectId),
          Status: ko.observable(0),
          Priority: ko.observable(0)
        },
        tasks: ko.observableArray(),
        remove: function(task) {
          $.ajax({
            url: 'index.php/task/delete/' + task.Id,
            type: 'post',
            success: function(result) {
              if (!result) {
                return;
              }
              viewModel.tasks.remove(task);
              viewModel.editable.Name(null);
              viewModel.editable.Id(null);
              viewModel.editable.Status(null);
              viewModel.editable.Priority(null);
            }
          });
        },
        add: function() {
          var task;
          if (!viewModel.editable.Id() && !viewModel.editable.Name()) {
            return;
          }
          console.log('test');
          viewModel.tasks.remove(viewModel.cache);
          task = {
            Id: viewModel.editable.Id(),
            Name: viewModel.editable.Name(),
            ProjectId: projectId,
            Status: viewModel.editable.Status()
          };
          $.ajax({
            url: viewModel.cache != null ? 'index.php/task/update/' + task.Id : 'index.php/task/create',
            type: 'post',
            data: {
              Task: task
            },
            success: function(result) {
              if (!result) {
                return;
              }
              task.Id = JSON.parse(result).id;
              viewModel.tasks.push(task);
            }
          });
          $('#name').val('').focus();
          viewModel.editable.Name(null);
          viewModel.editable.Id(null);
          viewModel.editable.Status(null);
          viewModel.editable.Priority(null);
          viewModel.cache = null;
        },
        edit: function(task) {
          viewModel.cache = task;
          viewModel.editable.Id(task.Id);
          viewModel.editable.Name(task.Name);
          viewModel.editable.Status(task.Status);
          viewModel.editable.Priority(task.Priority);
        },
        init: function() {
          return $.ajax({
            url: 'index.php/task/index/' + projectId,
            type: 'get',
            mimeType: "application/json",
            dataType: "json",
            success: function(data) {
              viewModel.tasks(data);
            }
          });
        },
        priorityUp: function(task) {
          ++task.Priority;
          $.ajax({
            url: 'index.php/task/update/' + task.Id,
            type: 'post',
            data: {
              Task: task
            },
            success: function(result) {
              if (!result) {
                task.Status = 0;
              }
              viewModel.tasks.remove(task);
              viewModel.tasks.push(task);
            }
          });
        },
        priorityDown: function(task) {
          --task.Priority;
          $.ajax({
            url: 'index.php/task/update/' + task.Id,
            type: 'post',
            data: {
              Task: task
            },
            success: function(result) {
              if (!result) {
                task.Status = 0;
              }
              viewModel.tasks.remove(task);
              viewModel.tasks.push(task);
            }
          });
        },
        done: function(task) {
          task.Status = +task.Status === 0 ? 1 : 0;
          $.ajax({
            url: 'index.php/task/update/' + task.Id,
            type: 'post',
            data: {
              Task: task
            },
            success: function(result) {
              if (!result) {
                task.Status = 0;
              }
              viewModel.tasks.remove(task);
              viewModel.tasks.push(task);
            }
          });
        }
      };
    };
    return function(id) {
      var ret;
      ret = new result(id);
      ret.init();
      return ret;
    };
  });

}).call(this);
